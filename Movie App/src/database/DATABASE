CREATE DATABASE MovieTheatreDB;
USE MovieTheatreDB;

CREATE TABLE Movie (
    movie_ID INT PRIMARY KEY AUTO_INCREMENT,
    movie_title VARCHAR(255) NOT NULL,
    movie_genre VARCHAR(50),
    movie_summary TEXT,
    movie_price DECIMAL(10, 2)
);
CREATE TABLE Showtime (
    showtime_ID INT PRIMARY KEY AUTO_INCREMENT,
    movie_ID INT NOT NULL,
    start_time DATETIME NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (movie_ID) REFERENCES Movie(movie_ID)
);
CREATE TABLE Seat (
    seat_ID INT PRIMARY KEY AUTO_INCREMENT,
    showtime_ID INT NOT NULL,
    seat_row VARCHAR(10),
    seat_number VARCHAR(10),
    is_available BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (showtime_ID) REFERENCES Showtime(showtime_ID)
);
CREATE TABLE Ticket (
    ticket_ID INT PRIMARY KEY AUTO_INCREMENT,
    user_ID INT,
    showtime_ID INT NOT NULL,
    seat_ID INT NOT NULL,
    ticket_status VARCHAR(50) DEFAULT 'active', -- e.g., 'active', 'cancelled'
    FOREIGN KEY (user_ID) REFERENCES RegisteredUser(user_ID),
    FOREIGN KEY (showtime_ID) REFERENCES Showtime(showtime_ID),
    FOREIGN KEY (seat_ID) REFERENCES Seat(seat_ID)
);
CREATE TABLE User (
    user_ID INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    username VARCHAR(50) UNIQUE NOT NULL
);
CREATE TABLE RegisteredUser (
    user_ID INT PRIMARY KEY,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    address TEXT,
    card_number VARCHAR(16) NOT NULL,
    annual_fee DECIMAL(10, 2) DEFAULT 20.00,
    has_discount BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (user_ID) REFERENCES User(user_ID)
);
CREATE TABLE DatabaseAdmin (
    user_ID INT PRIMARY KEY,
    admin_level VARCHAR(50) NOT NULL,
    FOREIGN KEY (user_ID) REFERENCES RegisteredUser(user_ID)
);
CREATE TABLE OrdinaryUser (
    user_ID INT PRIMARY KEY,
    is_registered BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_ID) REFERENCES User(user_ID)
);
CREATE TABLE Announcement (
    announcement_ID INT PRIMARY KEY AUTO_INCREMENT,
    creation_date DATE NOT NULL,
    release_date DATE NOT NULL,
    movie_ID INT NOT NULL,
    FOREIGN KEY (movie_ID) REFERENCES Movie(movie_ID)
);
CREATE TABLE Payment (
    payment_ID INT PRIMARY KEY AUTO_INCREMENT,
    user_ID INT NOT NULL,
    ticket_ID INT NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    payment_method VARCHAR(50),
    payment_date DATETIME NOT NULL,
    payment_status BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (user_ID) REFERENCES RegisteredUser(user_ID),
    FOREIGN KEY (ticket_ID) REFERENCES Ticket(ticket_ID)
);
CREATE TABLE BankCardInfo (
    card_ID INT PRIMARY KEY AUTO_INCREMENT,
    card_number VARCHAR(16) UNIQUE NOT NULL,
    user_ID INT NOT NULL,
    FOREIGN KEY (user_ID) REFERENCES RegisteredUser(user_ID)
);
CREATE TABLE Name (
    name_ID INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(50),
    middle_name VARCHAR(50),
    last_name VARCHAR(50)
);
CREATE TABLE DateInfo (
    date_ID INT PRIMARY KEY AUTO_INCREMENT,
    day INT NOT NULL,
    month INT NOT NULL,
    year INT NOT NULL
);
CREATE TABLE Login (
    login_ID INT PRIMARY KEY AUTO_INCREMENT,
    user_ID INT NOT NULL,
    session_start DATETIME DEFAULT CURRENT_TIMESTAMP,
    session_end DATETIME,
    FOREIGN KEY (user_ID) REFERENCES User(user_ID)
);
CREATE TABLE Booking (
    booking_ID INT PRIMARY KEY AUTO_INCREMENT,
    user_ID INT NOT NULL,
    booking_date DATETIME NOT NULL,
    is_cancelled BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_ID) REFERENCES User(user_ID)
);
CREATE TABLE Receipt (
    receipt_ID INT PRIMARY KEY AUTO_INCREMENT,
    ticket_ID INT NOT NULL,
    booking_date DATETIME NOT NULL,
    FOREIGN KEY (ticket_ID) REFERENCES Ticket(ticket_ID)
);