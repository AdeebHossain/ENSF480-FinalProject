-- Create the database
CREATE DATABASE MovieTheatreDB;
USE MovieTheatreDB;

-- 1. Name Table
CREATE TABLE Name (
    name_ID INT AUTO_INCREMENT PRIMARY KEY,
    firstName VARCHAR(50) NOT NULL,
    middleName VARCHAR(50),
    lastName VARCHAR(50) NOT NULL
);

-- 2. User Table
CREATE TABLE User (
    user_ID INT AUTO_INCREMENT PRIMARY KEY,
    name_ID INT NOT NULL,
    username VARCHAR(50) UNIQUE NOT NULL,
    FOREIGN KEY (name_ID) REFERENCES Name(name_ID) ON DELETE CASCADE
);

-- 3. RegisteredUser Table
CREATE TABLE RegisteredUser (
    registered_user_ID INT AUTO_INCREMENT PRIMARY KEY,
    user_ID INT NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    address VARCHAR(255),
    annual_fee DECIMAL(10, 2) DEFAULT 20.00,
    has_discount BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (user_ID) REFERENCES User(user_ID) ON DELETE CASCADE
);

-- 4. OrdinaryUser Table
CREATE TABLE OrdinaryUser (
    ordinary_user_ID INT AUTO_INCREMENT PRIMARY KEY,
    user_ID INT NOT NULL,
    isRegistered BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_ID) REFERENCES User(user_ID) ON DELETE CASCADE
);

-- 5. DatabaseAdmin Table
CREATE TABLE DatabaseAdmin (
    admin_ID INT AUTO_INCREMENT PRIMARY KEY,
    registered_user_ID INT NOT NULL,
    FOREIGN KEY (registered_user_ID) REFERENCES RegisteredUser(registered_user_ID) ON DELETE CASCADE
);

-- 6. BankCardInfo Table
CREATE TABLE BankCardInfo (
    card_ID INT AUTO_INCREMENT PRIMARY KEY,
    card_number VARCHAR(16) UNIQUE NOT NULL,
    expiry_date DATE NOT NULL,
    cvv INT NOT NULL,
    registered_user_ID INT NOT NULL,
    FOREIGN KEY (registered_user_ID) REFERENCES RegisteredUser(registered_user_ID) ON DELETE CASCADE
);

-- 7. Movie Table
CREATE TABLE Movie (
    movie_ID INT AUTO_INCREMENT PRIMARY KEY,
    movie_title VARCHAR(255) NOT NULL,
    movie_genre VARCHAR(50),
    movie_summary TEXT
);

-- 8. Announcement Table
CREATE TABLE Announcement (
    announcement_ID INT AUTO_INCREMENT PRIMARY KEY,
    creation_date DATE NOT NULL,
    release_date DATE NOT NULL,
    movie_ID INT NOT NULL,
    FOREIGN KEY (movie_ID) REFERENCES Movie(movie_ID) ON DELETE CASCADE
);

-- 9. Seat Table
CREATE TABLE Seat (
    seat_ID INT AUTO_INCREMENT PRIMARY KEY,
    seat_row CHAR(1) NOT NULL,
    seat_number INT NOT NULL,
    is_available BOOLEAN DEFAULT TRUE
);

-- 10. Showtime Table
CREATE TABLE Showtime (
    showtime_ID INT AUTO_INCREMENT PRIMARY KEY,
    movie_ID INT NOT NULL,
    start_time DATETIME NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (movie_ID) REFERENCES Movie(movie_ID) ON DELETE CASCADE
);

-- 11. Booking Table
CREATE TABLE Booking (
    booking_ID INT AUTO_INCREMENT PRIMARY KEY,
    user_ID INT NOT NULL,
    booking_date DATETIME NOT NULL,
    isCancelled BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_ID) REFERENCES User(user_ID) ON DELETE CASCADE
);

-- 12. Ticket Table
CREATE TABLE Ticket (
    ticket_ID INT AUTO_INCREMENT PRIMARY KEY,
    booking_ID INT NOT NULL,
    showtime_ID INT NOT NULL,
    seat_ID INT NOT NULL,
    FOREIGN KEY (booking_ID) REFERENCES Booking(booking_ID) ON DELETE CASCADE,
    FOREIGN KEY (showtime_ID) REFERENCES Showtime(showtime_ID) ON DELETE CASCADE,
    FOREIGN KEY (seat_ID) REFERENCES Seat(seat_ID) ON DELETE CASCADE
);

-- 13. Payment Table
CREATE TABLE Payment (
    payment_ID INT AUTO_INCREMENT PRIMARY KEY,
    ticket_ID INT NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    payment_method VARCHAR(50),
    payment_status BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (ticket_ID) REFERENCES Ticket(ticket_ID) ON DELETE CASCADE
);

-- 14. Receipt Table
CREATE TABLE Receipt (
    receipt_ID INT AUTO_INCREMENT PRIMARY KEY,
    ticket_ID INT NOT NULL,
    numTickets INT NOT NULL,
    total DECIMAL(10, 2) NOT NULL,
    date DATE NOT NULL,
    user VARCHAR(255),
    FOREIGN KEY (ticket_ID) REFERENCES Ticket(ticket_ID) ON DELETE CASCADE
);
